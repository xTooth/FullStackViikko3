{"version":3,"sources":["Components/person.js","Components/rows.js","Components/AddPplForm.js","Services/PersonService.js","App.js","serviceWorker.js","index.js"],"names":["Person","props","react_default","a","createElement","Fragment","value","name","number","onClick","rem","Rows","p","persons","filter","per","toLowerCase","includes","map","person","Components_person","key","AddPplForm","onSubmit","addName","newName","onChange","handleNameChange","newNumber","handleNumbChange","type","baseUrl","PersonService","axios","get","newObject","post","id","put","concat","window","confirm","console","log","delete","catch","error","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","message","setMessage","_useState11","_useState12","mStyle","setMStyle","hook","then","response","data","useEffect","_ref","style","className","event","preventDefault","target","Components_AddPplForm","doesExist","find","i","undefined","res","setTimeout","rows","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.112de65f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = (props) => {\r\n // console.log(props.value.id, props.persons)  \r\n  return (\r\n      <>\r\n        <li>{props.value.name} {props.value.number} <button onClick={() => {props.rem(props)}}>poista</button></li>\r\n      </>\r\n    )\r\n  }\r\nexport default Person","import React from 'react'\r\nimport Person from './person.js'\r\n\r\nconst Rows = (props) => {\r\n\r\n  const p = props.persons\r\n    .filter(per => per.name.toLowerCase().includes(props.filter.toLowerCase()))\r\n    .map(person => <Person key={person.name} value={person} rem={props.rem}/>)\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {p}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Rows","import React from 'react'\r\n\r\nconst AddPplForm = (props) => {\r\n return( <form onSubmit={props.addName}>\r\n    <div> \r\n      nimi: <input value={props.newName} onChange={props.handleNameChange} />\r\n      <br />\r\n      numero: <input value={props.newNumber} onChange={props.handleNumbChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" >lisää</button>\r\n    </div>\r\n  </form>\r\n )\r\n}\r\nexport default AddPplForm","import axios from 'axios'\r\nconst baseUrl = 'http://serene-castle-37314.herokuapp.com/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\nconst del = (props) => {\r\n    if (window.confirm('Haluatko varmasi poistaa')) {\r\n        console.log(props.value.id)\r\n\r\n        return axios.delete(`${baseUrl}/${props.value.id}`).catch(error =>\r\n            console.log('catched')\r\n        )\r\n\r\n    }\r\n\r\n}\r\nconst put = () => {\r\n\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    delete: del,\r\n    put: put\r\n}","import React, { useState, useEffect } from 'react'\nimport Rows from './Components/rows.js'\nimport AddPplForm from './Components/AddPplForm'\nimport PersonService from './Services/PersonService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [mStyle, setMStyle] = useState(message)\n\n  const hook = () => {\n    PersonService.getAll()\n      .then(response => {\n        console.log('data retrieved')\n        setPersons(response.data)\n      })\n  }\n\n  const Notification = ({ message, style }) => {\n\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className={style}>\n        {message}\n      </div>\n    )\n  }\n\n  useEffect(hook, [])\n\n  const rem = (props) => {\n    console.log(props)\n\n    PersonService.delete(props)\n      .then(res => { hook() })\n      .then(res => {\n        setMStyle('message')\n        setMessage(`${props.value.name} poistettiin`)\n        setTimeout(() => { setMessage(null) }, 5000)\n      })\n      .catch(error => {\n        setMStyle('error')\n        setMessage(`${props.value.name} on jo poistettu`)\n        setTimeout(() => { setMessage(null) }, 5000)\n      }).then(res => { hook() })\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n\n\n\n    const doesExist = persons.find(i => i.name === person.name);\n    setNewName('')\n    setNewNumber('')\n    if (doesExist !== undefined) {\n      if (window.confirm(`${person.name} on jo listalla, korvataanko numero uudella?`)) {\n        PersonService.update(doesExist.id, person)\n          .then(res => { hook() })\n          .then(res => {\n            setMStyle('message')\n            setMessage(`${person.name} muutettiin`)\n            setTimeout(() => { setMessage(null) }, 5000)})\n              .catch(error => {\n                setMStyle('error')\n                setMessage(`${person.name} on jo poistettu`);\n                setTimeout(() => { setMessage(null) }, 5000)\n              }).then(res => { hook() })\n          }\n        \n\n    } else {\n      setNewName('')\n      setNewNumber('')\n      PersonService.create(person).then(res => { hook() })\n      setMStyle('message')\n      setMessage(\n        `Henkilö '${person.name}' lisätty onnistuneesti`\n      )\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n    console.log(event.target.value)\n  }\n\n  const handleNumbChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    event.preventDefault()\n    setFilter(event.target.value);\n  }\n\n  return (\n    <div>\n      <Notification message={message} style={mStyle} />\n\n      <h2>Puhelinluettelo</h2>\n      <form>\n        rajaa näytettävät: <input value={filter} onChange={handleFilter} />\n      </form>\n      <h2>Lisää uusi</h2>\n      <AddPplForm addName={addName}\n        handleNameChange={handleNameChange} newName={newName}\n        handleNumbChange={handleNumbChange} newNumber={newNumber} />\n\n      <h2>Numerot</h2>\n      <Rows filter={filter} persons={persons} rem={rem} />\n    </div>\n  )\n\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}